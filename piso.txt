PISO
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
entity piso_test is
-- Port ( );
end piso_test;
architecture Behavioral of piso_test is
component pisoo_1 is
Port ( clk : in STD_LOGIC;
load : in STD_LOGIC;
clk_div : inout STD_LOGIC;
in3 : in STD_LOGIC_VECTOR (3 downto 0);
out3 : out STD_LOGIC);
end component;
signal clk,load,clk_div,out3:std_logic;
signal in3:std_logic_vector(3 downto 0);
begin
process
begin
clk<='0';
wait for 5 ns;
clk<='1';
wait for 5 ns;
end process;
process
begin
load<='0';
in3<="1110";
wait for 200 ns;
load<='1';
wait for 200 ns;
end process;
u1:pisoo_1 port map(clk,load,clk_div,in3,out3);
end Behavioral;
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;
-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;
entity pisoo_1 is
Port ( clk : in STD_LOGIC;
load : in STD_LOGIC;
clk_div : inout STD_LOGIC;
in3 : in STD_LOGIC_VECTOR (3 downto 0);
out3 : out STD_LOGIC);
end pisoo_1;
architecture Behavioral of pisoo_1 is
signal count:std_logic_vector(26 downto 0):=(others=>'0');
signal s3:std_logic;
signal temp:std_logic_vector(3 downto 0);
begin
process(clk_div,in3,load,s3,temp)
begin
if(load='0')then
temp(3 downto 0)<= in3(3 downto 0);
elsif(clk_div'event and clk_div='1') then
temp(3 downto 1)<= temp(2 downto 0);
s3 <= temp(3);
end if;
end process;
out3 <= s3;
process(clk)
begin
if(clk' event and clk='1') then
count <= count+1;
end if;
end process;
clk_div<=count(1);
end Behavioral;

